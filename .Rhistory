pheno <- read.csv("data/1_QTL_AllFamilies_NoOutlier.csv")
dim(pheno)
head(pheno)
dim(pheno)
n2 <- subset(pheno, !is.na(X15NT1))
n2 <- subset(pheno, !is.na(X15NT1))
hist(n2$X15NT1)
hist(n2$X15NT1, breaks=30)
hist(n2$X15NT1R, breaks=30)
hist(n2$X15NT1, breaks=30)
library(g3tools)
?get_BLUP
pheno <- read.csv("data/1_QTL_AllFamilies_NoOutlier.csv")
dim(pheno)
tail(pheno)
pheno <- read.csv("data/1_QTL_AllFamilies_NoOutlier.csv")
dim(pheno)
head(pheno)
out <- get_BLUP(data = pheno, model = Brix ~ (1 | X15NT1) + (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude) + (1| Line:Longitude) + (1 | Line:Latitude), which.factor = "Line",
outfile = "data/blup.csv")
library("lmer")
library("lme4")
out <- get_BLUP(data = pheno, model = Brix ~ (1 | X15NT1) + (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude) + (1| Line:Longitude) + (1 | Line:Latitude), which.factor = "Line",
outfile = "data/blup.csv")
out <- get_BLUP(data = pheno, model = X15NT1 ~ (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude) + (1| Line:Longitude) + (1 | Line:Latitude), which.factor = "Line",
outfile = "data/blup.csv")
b <- read.csv("data/blup.csv")
dim(b)
head(b)
plot(b$value)
hist(b$value)
hist(b$value, breaks=30)
out
?get_H2
fit <- get_BLUP(data = pheno, model = X15NT1 ~ (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Line",
outfile = "data/blup.csv")
fit
get_H2(fit, numerator="Line",
denominator=data.frame(f=c("Line", "Residual"),
df=c(1, 1)))
fit1 <- get_BLUP(data = pheno, model = DT ~ (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Line",
outfile = "data/blup_DT.csv")
get_H2(fit1, numerator="Line",
denominator=data.frame(f=c("Line", "Residual"),
df=c(1, 1)))
fit2 <- get_BLUP(data = pheno, model = DPS ~ (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Line",
outfile = "data/blup_DPS.csv")
get_H2(fit2, numerator="Line",
denominator=data.frame(f=c("Line", "Residual"),
df=c(1, 1)))
fit3 <- get_BLUP(data = pheno, model = AR ~ (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Line",
outfile = "data/blup_AR.csv")
myp <- subset(pheno, !is.na(AR))
fit3 <- get_BLUP(data = myp, model = AR ~ (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Line",
outfile = "data/blup_AR.csv")
class(myp$AR)
myp$AR
myp <- subset(pheno, !is.na(AR) & AR != "x" & AR != "--")
myp$AR <- as.numeric(as.character(myp$AR))
myp <- subset(pheno, !is.na(AR) & AR != "x" & AR != "--")
myp$AR <- as.numeric(as.character(myp$AR))
fit3 <- get_BLUP(data = myp, model = AR ~ (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Line",
outfile = "data/blup_AR.csv")
get_H2(fit3, numerator="Line",
denominator=data.frame(f=c("Line", "Residual"),
df=c(1, 1)))
fit <- get_BLUP(data = pheno, model = X15NT1 ~ (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Line",
outfile = "data/blup.csv")
get_H2(fit, numerator="Line",
denominator=data.frame(f=c("Line", "Residual"),
df=c(1, 1)))
fit2 <- get_BLUP(data = pheno, model = X15NT2 ~ (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Line",
outfile = "data/blup_15NT2.csv")
get_H2(fit2, numerator="Line",
denominator=data.frame(f=c("Line", "Residual"),
df=c(1, 1)))
fit3 <- get_BLUP(data = pheno, model = X15NT3 ~ (1 | Line) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Line",
outfile = "data/blup_15NT3.csv")
get_H2(fit3, numerator="Line",
denominator=data.frame(f=c("Line", "Residual"),
df=c(1, 1)))
?get_BLUP
geno <- read.table("data/Genotypes_filtered_B73_final.txt")
dim(geno)
geno[1:10, 1:10]
geno <- read.table("data/Genotypes_filtered_B73_final.txt", header=TRUE)
geno[1:10, 1:10]
pheno <- read.csv("data/1_QTL_AllFamilies_NoOutlier.csv")
head(pheno)
tail(pheno)
fit <- get_BLUP(data = pheno, model = X15NT1 ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_15NT1.csv")
get_H2(fit, numerator="Line", denominator=data.frame(f=c("Line", "Residual"),
df=c(1, 1)))
fit <- get_BLUP(data = pheno, model = X15NT1 ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_15NT1.csv")
fit
get_H2(fit, numerator="Line", denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
get_H2(fit, numerator="Genotype", denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
library(rqtl)
install.packages("qtl")
library(qtl)
geno <- read.table("data/Genotypes_filtered_B73_final.txt", header=TRUE)
dim(geno)
geno[1:10, 1:10]
tail(geno[, 1:10])
h <- geno[, 1:3]
names(h) <- c("id", "chr", "pos")
g <- cbind(h, geno[, -1])
head(g[, 1:10])
h$chr <- gsub("S|_.*", "", h$id)
h$pos <- gsub(".*_", "" h$id)
h$pos <- gsub(".*_", "", h$id)
h$pos <- as.numeric(as.character(h$pos))/1000000
g <- cbind(h, geno[, -1])
head(g)
g[g=="U"] <- "-"
g <- data.frame(lapply(g, function(x) {gsub("U", "-", x)}))
head(g)
g <- apply(g, 1, as.character)
g <- cbind(h, geno[, -1])
g <- apply(g, 1, as.character)
g <- data.frame(lapply(g, function(x) {gsub("U", "-", x)}))
head(g)
g <- cbind(h, geno[, -1])
head(g)
?apply
g <- apply(g, 2, as.character)
head(g)
g <- data.frame(lapply(g, function(x) {gsub("U", "-", x)}))
head(g)
g <- cbind(h, apply(geno[, -1], 2, as.character))
head(g)
g <- data.frame(lapply(g, function(x) {gsub("U", "-", x)}))
head(g)
tg <- t(g)
dim(tg)
tg[1:10, 1:10]
names(g)[2:3] <- c("", "")
head(g[, 1:10])
?t
tg[1:10, 1:10]
row.names(tg)[2:3] <- c("", "")
tg[1:10, 1:10]
write.table(tg, "cache/geno_B73.csv", sep=",", col.names=FALSE)
p <- read.csv("data/blup_15NT1.csv")
head(p)
names(p)[1:2] <- c("id", "a15NT1")
p$id <- paste0("X", p$id)
head(p)
write.table(p, "cache/pheno_a15NT1.csv", sep=",")
write.table(p, "cache/pheno_a15NT1.csv", sep=",", row.names=FALSE, quote=FALSE)
library(qtl)
?read.cross
d <- read.cross("csvs", dir="cache", "geno_B73.csv", "pheno_a15NT1.csv")
summary(d)
plotPheno(d, pheno.col=1)
plotPheno(d, pheno.col=2)
d <- calc.genoprob(d, step=1)
out.em <- scanone(d)
?scanone
out.em <- scanone(d, pheno.col=2)
summary(out.em)
plot(out.em)
out.hk <- scanone(sug, pheno.col=2, method="hk")
out.hk <- scanone(d, pheno.col=2, method="hk")
plot(out.em, out.hk, col=c("blue", "red"))
head(geno)
