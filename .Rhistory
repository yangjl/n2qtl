df=c(1, 1)))
fit5 <- get_BLUP(data = pheno, model = DPS ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_noparents_DPS.csv")
get_H2(fit5, numerator="Genotype",
denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
fit6 <- get_BLUP(data = pheno, model = AR ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_noparents_AR.csv")
get_H2(fit6, numerator="Genotype",
denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
fit7 <- get_BLUP(data = myp, model = SC ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_noparents_SC.csv")
get_H2(fit7, numerator="Genotype",
denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
fit7 <- get_BLUP(data = pheno, model = SC ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_noparents_SC.csv")
get_H2(fit7, numerator="Genotype",
denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
fit8 <- get_BLUP(data = pheno, model = PDM ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_noparents_PDM.csv")
get_H2(fit8, numerator="Genotype",
denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
fit9 <- get_BLUP(data = pheno, model = PTN ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_noparents_PTN.csv")
get_H2(fit9, numerator="Genotype",
denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
fit10 <- get_BLUP(data = pheno, model = PTN_percent ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_noparents_PTN_percent.csv")
get_H2(fit10, numerator="Genotype",
denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
fit11 <- get_BLUP(data = pheno, model = GDM ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_noparents_GDM.csv")
get_H2(fit11, numerator="Genotype",
denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
fit12 <- get_BLUP(data = pheno, model = GTN ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_noparents_GTN.csv")
get_H2(fit12, numerator="Genotype",
denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
fit13 <- get_BLUP(data = pheno, model = GTN_percent ~ (1 | Genotype) + (1 | Rep) + (1 | Longitude)
+ (1 | Latitude), which.factor = "Genotype",
outfile = "data/blup_noparents_GTN_percent.csv")
get_H2(fit13, numerator="Genotype",
denominator=data.frame(f=c("Genotype", "Residual"),
df=c(1, 1)))
library("data.table")
mlm <- fread("largedata/mlm_filter95_noparents_PC5.txt", data.table=FALSE)
mlm <- fread("largedata/mlm_filter95_noparents_PC5.txt", data.table=FALSE)
ts <- unique(mlm$Trait)
CF = 0.05
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
source("lib/quickMHTplot.R")
source("lib/newpos.R")
pdf("graphs/mht_plots_noparents_fdr0.05.pdf", width=10, height=4)
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
dev.off()
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
library("data.table")
mlm <- fread("largedata/mlm_filter70.txt", data.table=FALSE)
ts <- unique(mlm$Trait)
CF = 0.05
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
pdf("graphs/mht_plots_new_fdr0.05.pdf", width=10, height=4)
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
dev.off()
mlm <- fread("largedata/mlm_filter95_noparents_PC5.txt", data.table=FALSE)
ts <- unique(mlm$Trait)
CF = 0.05
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
pdf("graphs/mht_plots_new_fdr0.05.pdf", width=10, height=4)
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
dev.off()
library("data.table")
mlm <- fread("largedata/mlm_filter70.txt", data.table=FALSE)
ts <- unique(mlm$Trait)
CF = 0.05
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
source("lib/quickMHTplot.R")
source("lib/newpos.R")
pdf("graphs/mht_plots_new_fdr0.05.pdf", width=10, height=4)
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
library("data.table")
mlm <- fread("largedata/mlm_filter70.txt", data.table=FALSE)
ts <- unique(mlm$Trait)
CF = 0.05 # 0.1
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
source("lib/quickMHTplot.R")
source("lib/newpos.R")
pdf("graphs/mht_plots_new_fdr0.05.pdf", width=10, height=4)
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
dev.off()
mlm <- fread("largedata/mlm_filter70_noparents.txt", data.table=FALSE)
ts <- unique(mlm$Trait)
CF = 0.05 # 0.1
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
source("lib/quickMHTplot.R")
source("lib/newpos.R")
pdf("graphs/mht_plots_noparents_fdr0.05.pdf", width=10, height=4)
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
dev.off()
mlm <- fread("largedata/mlm_filter70.txt", data.table=FALSE)
mlm <- fread("largedata/mlm_filter90.txt", data.table=FALSE)
ts <- unique(mlm$Trait)
CF = 0.05 # 0.1
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
source("lib/quickMHTplot.R")
source("lib/newpos.R")
pdf("graphs/mht_plots_filter90_fdr0.05.pdf", width=10, height=4)
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
dev.off()
mlm <- fread("largedata/mlm_filter95.txt", data.table=FALSE)
ts <- unique(mlm$Trait)
CF = 0.05 # 0.1
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
source("lib/quickMHTplot.R")
source("lib/newpos.R")
pdf("graphs/mht_plots_filter95_fdr0.05.pdf", width=10, height=4)
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
dev.off()
mlm <- fread("largedata/mlm_filter90.txt", data.table=FALSE)
ts <- unique(mlm$Trait)
CF = 0.05 # 0.1
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
source("lib/quickMHTplot.R")
source("lib/newpos.R")
pdf("graphs/mht_plots_filter90_fdr0.05.pdf", width=10, height=4)
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
dev.off()
library("data.table")
mlm <- fread("largedata/mlm_filter90.txt", data.table=FALSE)
ts <- unique(mlm$Trait)
CF = 0.05 # 0.1
out <- list()
idx_cf <- c()
for(i in 1:length(ts)){
sub <- subset(mlm, Trait %in% ts[i])
sub <- subset(sub, Chr %in% 1:10)
names(sub)[3:4] <- c("chr", "pos")
sub$qval <- p.adjust(sub$p, method ="fdr")
message(sprintf("###>>> trait [ %s ]: [ %s/%s ] qval < [ %s ]",
ts[i], sum(sub$qval < CF, na.rm=T), nrow(sub), CF))
out[[ts[i]]] <- sub
if(sum(sub$qval < CF, na.rm=T) > 0 ){
idx <- which.min( abs(sub$qval - CF))
idx_cf <- c(idx_cf, idx)
}else{
idx_cf <- c(idx_cf, 0)
}
}
source("lib/quickMHTplot.R")
source("lib/newpos.R")
pdf("graphs/mht_plots_filter90_fdr0.05.pdf", width=10, height=4)
for(j in 1:length(out)){
t <- names(out)[j]
sub <- out[[t]]
sub$log10p <- -log10(sub$p)
if(idx_cf[j] > 0){
mycf <- sub$log10p[idx_cf[j]]
}
sub <- as.data.frame(sub)
sub <- subset(sub, log10p > 1)
quickMHTplot(res=sub, cex=.6, pch=16, col=rep(c("slateblue", "cyan4"), 5),
GAP=5e+06, yaxis=NULL, main=t, ylab="-log10(p-value)",
col2plot="log10p")
if(idx_cf[j] > 0){
abline(h=mycf, col="red", lty=2)
}
}
dev.off()
